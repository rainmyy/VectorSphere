apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vectordb
  namespace: vectorsphere
spec:
  serviceName: vectordb-service
  replicas: 3
  selector:
    matchLabels:
      app: vectordb
  template:
    metadata:
      labels:
        app: vectordb
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: vectordb
        image: vectorsphere/vectordb:latest
        ports:
        - containerPort: 8082
        env:
        - name: ETCD_ENDPOINTS
          value: "etcd-service:2379"
        - name: REDIS_ADDR
          value: "redis-service:6379"
        - name: SERVICE_PORT
          value: "8082"
        - name: DATA_PATH
          value: "/data"
        - name: LOG_LEVEL
          value: "info"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config
          mountPath: /root/conf
        - name: vector-data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8082
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
      volumes:
      - name: config
        configMap:
          name: vectorsphere-config
  volumeClaimTemplates:
  - metadata:
      name: vector-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: vectordb-service
  namespace: vectorsphere
spec:
  clusterIP: None
  selector:
    app: vectordb
  ports:
  - port: 8082
    targetPort: 8082